<!--
BUILD COMMON TEMPLATE FILE. This gets included into most build.xml
files via the DTD system entity reference feature.
-->

	<!-- global constants (hardcoded to OSX) -->
	<property name="local-jdk-api" value="/localhost/System/Library/Frameworks/JavaVM.framework/Versions/A/Resources/English.lproj/Documentation/Reference/Java/"/>
	<property name="web-jdk-api" value="http://java.sun.com/j2se/1.3/docs/api/"/>

	<!-- common build constants -->
	<property name="dir.src" value="${basedir}/src"/>
	<property name="dir.build" value="${basedir}/bin"/>
	<property name="dir.resources" value="${basedir}/support/resources"/>
	<property name="dir.lib" value="${basedir}/lib"/>
	<property name="dir.dist" value="${basedir}/release"/>
	<property name="dir.java-lib" value="${basedir}/../java-lib/release/"/>
	<property name="dir.doc" value="${basedir}/doc"/>
	<property name="dir.support" value="${basedir}/support"/>
	<property name="dir.javadoc" value="${dir.doc}/javadoc"/>
	<property name="app.name" value="${ant.project.name}"/>
	<property name="app.jarfile" value="${app.abbr}.jar"/>

    <!-- call this for a complete rebuild -->
	<target name="all">
		<antcall target="init"/>
		<antcall target="clean"/>
		<antcall target="java.compile"/>
		<antcall target="release"/>
	</target>

    <!-- remove all the compiled files -->
	<target name="clean">
		<delete dir="${dir.build}/"/>
		<delete file="*.jar"/>
	</target>

    <!-- just start up the compilation -->
	<target name="init">
		<echo message="********************************************************"/>
		<echo message="************** ${app.name} - Building v${app.ver}" />
		<echo message="********************************************************"/>
		<mkdir dir="${dir.build}"/>
		<unzip dest="${dir.build}">
			<fileset dir="${dir.lib}/">
				<include name="*.zip"/>
				<include name="*.jar"/>
			</fileset>
		</unzip>
	</target>

    <!-- compiles the actual code of this project -->
	<target name="java.compile" depends="init">
		<!-- copy over the lib classes to bin -->
		<mkdir dir="${dir.build}/lib"/>
		<unzip dest="${dir.build}">
		    <fileset dir="${dir.lib}">
		        <include name="**/*.jar"/>
		    </fileset>
		</unzip>		
		<javac srcdir="${dir.src}" destdir="${dir.build}" />
		<antcall target="java.jar"/>
	</target>

	<!-- package the compiled files into a jar -->
	<target name="java.jar">
		<!-- build the jar -->
		<jar jarfile="${app.jarfile}" basedir="${dir.build}" />
	</target>
	
	<!-- build an executable of the compiled files into the release dir -->
	<target name="release">
        <property name="app.dirname" value="${app.name} v${app.ver}" />
        <!-- Linux -->
        <copy todir="${dir.dist}/${app.dirname}">
            <fileset refid="release-files"/>
        </copy>
        <copy file="${dir.support}/${app.name}.sh" todir="${dir.dist}/${app.dirname}" />
        <chmod file="${dir.dist}/${app.dirname}/${app.name}.sh" perm="+x"/>
        <delete>    <!-- get rid of OSX files -->
            <fileset dir="${dir.dist}/${app.dirname}/"
                includes="**/*.DS_Store"/>
        </delete>
        <tar destfile="${dir.dist}/${app.name}.tar">
            <tarfileset dir="${dir.dist}/${app.dirname}" prefix="${app.dirname}"/>
        </tar>
        <gzip src="${dir.dist}/${app.name}.tar" zipfile="${dir.dist}/${app.name}.tgz"/>
        <delete file="${dir.dist}/${app.name}.tar"/>
	</target>
	
	<!-- build the javadoc... -->
	<target name="doc.javadoc">
		<delete dir="${dir.javadoc}"/>
		<mkdir dir="${dir.javadoc}"/>
		<javadoc 
			destdir="${dir.javadoc}"
			author="true"
			version="true"
			use="true"
			windowtitle="Rahulbotics : ${app.name}">
			<packageset dir="src" defaultexcludes="yes"/>
			<link href="${web-jdk-api}"/>
			<!--<link href="http://developer.apple.com/techpubs/macosx/Java/Reference/api/"/>-->
		</javadoc>
	</target>
